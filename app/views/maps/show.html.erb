<h2>Google map</h2>

<input id="address" type="textbox" value=""> <%# 検索したい住所や場所を入力するテキストボックス %>
<input type="button" value="地図を検索" onclick="codeAddress()"> <%# 処理を行うボタン %>
<div id="display">緯度経度が表示されるよ！</div>
<div id='map'></div> <%# ブラウザ画面上マップを表示する場所 %>

<style>
#map {
  height: 400px;
  width: 400px;
}
</style>

<script>
let map  // map という変数を定義 (letは後で書き換えることができる)

const display = document.getElementById('display')   // id='display'である、HTML内の要素を display という定数に代入しています。(5行目の要素を取得)

function initMap(){  // mapの表示関数 (rubyでいう def initMap ~ end) 処理のまとまり
  geocoder = new google.maps.Geocoder()  // Geocoderのインスタンス(オブジェクト)を作成：GoogleMapAPIを使うための準備
  // mapの初期位置, 縮尺を定義、参考にする住所がないので初期設定を行う。
  // 変数mapの初期位置, 縮尺を定義
  // Mapクラスのインスタンスを作成(new)
  map = new google.maps.Map(document.getElementById('map'), {
    center: {lat: 35.6458437, lng:139.7046171},
    zoom: 12,
  });

  };

// 地図検索関数、ボタンを押した時の処理
// 入力された住所から緯度・経度を検索して、地図上に表示するための関数
let geocoder
// post.address が右辺に対応する
let inputAddress = document.getElementById('address').value;

geocoder.geocode({
    'address': inputAddress
}, function codeAddress(){
  let inputAddress = document.getElementById('address').value;  // post.address が右辺に対応する
    // Geocoder(住所を渡すと緯度経度を返すAPI)と通信した結果
    // 成功かどうかが status に入る
    // status が 'OK' で Geocoderから返ってくれば
    // if内の処理が行われる
    if (status == 'OK') {
      // setCenterというメソッドで、地図の中心をどこにするかを設定
      map.setCenter(results[0].geometry.location);
      //検索で得られた住所を取得、google.maps.Markerインスタンスを生成
      var marker = new google.maps.Marker({
          map: map,
          position: results[0].geometry.location
      });
      display.textContent = "検索結果：" + results[ 0 ].geometry.location
    } else {
      alert('該当する結果がありませんでした：' + status);
    }
  });   
</script>
<script src="https://maps.googleapis.com/maps/api/js?key=<%= ENV['GOOGLE_MAP_API_KEY'] %>&callback=initMap"async defer></script>